#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// ev3dev.hardware.Device
	c0 [label=<<table title="ev3dev.hardware.Device" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Device </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # closeList : ArrayList&lt;Closeable&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Device() </td></tr>
<tr><td align="left" balign="left"> # releaseOnClose(res : Closeable) </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.DeviceException
	c1 [label=<<table title="ev3dev.hardware.DeviceException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DeviceException </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DeviceException() </td></tr>
<tr><td align="left" balign="left"> + DeviceException(message : String) </td></tr>
<tr><td align="left" balign="left"> + DeviceException(cause : Throwable) </td></tr>
<tr><td align="left" balign="left"> + DeviceException(message : String, cause : Throwable) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.EV3DevDevice
	c2 [label=<<table title="ev3dev.hardware.EV3DevDevice" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3DevDevice </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DEVICE_ROOT_PATH : String </td></tr>
<tr><td align="left" balign="left"> - connected : boolean </td></tr>
<tr><td align="left" balign="left"> - pathDevice : File </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3DevDevice(type : String, portName : String) </td></tr>
<tr><td align="left" balign="left"> + getAttribute(attribute : String) : String </td></tr>
<tr><td align="left" balign="left"> + setAttribute(attribute : String, value : String) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.Shell
	c3 [label=<<table title="ev3dev.hardware.Shell" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Shell </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Shell() </td></tr>
<tr><td align="left" balign="left"> - executeCommand(command : String) : String </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.Sysfs
	c4 [label=<<table title="ev3dev.hardware.Sysfs" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Sysfs </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Sysfs() </td></tr>
<tr><td align="left" balign="left"> + writeString(filePath : String, value : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + readString(filePath : String) : String </td></tr>
<tr><td align="left" balign="left"> + readInteger(filePath : String) : int </td></tr>
<tr><td align="left" balign="left"> + getElements(path : String) : ArrayList&lt;File&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.BaseMotor
	c5 [label=<<table title="ev3dev.hardware.motor.BaseMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> BaseMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + forward() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + backward() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + stop() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + flt() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isMoving() : boolean </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.BaseRegulatedMotor
	c6 [label=<<table title="ev3dev.hardware.motor.BaseRegulatedMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> BaseRegulatedMotor </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # MAX_SPEED_AT_9V : int </td></tr>
<tr><td align="left" balign="left"> # NO_LIMIT : int </td></tr>
<tr><td align="left" balign="left"> # speed : float </td></tr>
<tr><td align="left" balign="left"> # acceleration : int </td></tr>
<tr><td align="left" balign="left"> - SYSTEM_CLASS_NAME : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BaseRegulatedMotor(motorPort : String, moveP : float, moveI : float, moveD : float, holdP : float, holdI : float, holdD : float, offset : int, maxSpeed : int) </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + suspendRegulation() : boolean </td></tr>
<tr><td align="left" balign="left"> + getTachoCount() : int </td></tr>
<tr><td align="left" balign="left"> + getPosition() : float </td></tr>
<tr><td align="left" balign="left"> + forward() </td></tr>
<tr><td align="left" balign="left"> + backward() </td></tr>
<tr><td align="left" balign="left"> + flt() </td></tr>
<tr><td align="left" balign="left"> + flt(immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
<tr><td align="left" balign="left"> + stop(immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + isMoving() : boolean </td></tr>
<tr><td align="left" balign="left"> + waitComplete() </td></tr>
<tr><td align="left" balign="left"> + rotateTo(limitAngle : int, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + setSpeed(speed : int) </td></tr>
<tr><td align="left" balign="left"> + setSpeed(speed : float) </td></tr>
<tr><td align="left" balign="left"> + setAcceleration(acceleration : int) </td></tr>
<tr><td align="left" balign="left"> + getAcceleration() : int </td></tr>
<tr><td align="left" balign="left"> + getLimitAngle() : int </td></tr>
<tr><td align="left" balign="left"> + resetTachoCount() </td></tr>
<tr><td align="left" balign="left"> + addListener(listener : RegulatedMotorListener) </td></tr>
<tr><td align="left" balign="left"> + removeListener() : RegulatedMotorListener </td></tr>
<tr><td align="left" balign="left"> + rotate(angle : int, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + rotate(angle : int) </td></tr>
<tr><td align="left" balign="left"> + rotateTo(limitAngle : int) </td></tr>
<tr><td align="left" balign="left"> + getSpeed() : int </td></tr>
<tr><td align="left" balign="left"> + isStalled() : boolean </td></tr>
<tr><td align="left" balign="left"> + setStallThreshold(error : int, time : int) </td></tr>
<tr><td align="left" balign="left"> + getRotationSpeed() : int </td></tr>
<tr><td align="left" balign="left"> + getMaxSpeed() : float </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.BasicMotor
	c7 [label=<<table title="ev3dev.hardware.motor.BasicMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> BasicMotor </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # INVALID_MODE : int </td></tr>
<tr><td align="left" balign="left"> # mode : int </td></tr>
<tr><td align="left" balign="left"> # power : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BasicMotor(type : String, portName : String) </td></tr>
<tr><td align="left" balign="left"> + setPower(power : int) </td></tr>
<tr><td align="left" balign="left"> + getPower() : int </td></tr>
<tr><td align="left" balign="left"> # updateState(newMode : int) </td></tr>
<tr><td align="left" balign="left"> + forward() </td></tr>
<tr><td align="left" balign="left"> + backward() </td></tr>
<tr><td align="left" balign="left"> + isMoving() : boolean </td></tr>
<tr><td align="left" balign="left"> + flt() </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.DCMotor
	c8 [label=<<table title="ev3dev.hardware.motor.DCMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> DCMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setPower(power : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getPower() : int </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.EV3LargeRegulatedMotor
	c9 [label=<<table title="ev3dev.hardware.motor.EV3LargeRegulatedMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3LargeRegulatedMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ MOVE_P : float </td></tr>
<tr><td align="left" balign="left"> ~ MOVE_I : float </td></tr>
<tr><td align="left" balign="left"> ~ MOVE_D : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_P : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_I : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_D : float </td></tr>
<tr><td align="left" balign="left"> ~ OFFSET : int </td></tr>
<tr><td align="left" balign="left"> - MAX_SPEED : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3LargeRegulatedMotor(motorPort : String) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.EV3MediumRegulatedMotor
	c10 [label=<<table title="ev3dev.hardware.motor.EV3MediumRegulatedMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3MediumRegulatedMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ MOVE_P : float </td></tr>
<tr><td align="left" balign="left"> ~ MOVE_I : float </td></tr>
<tr><td align="left" balign="left"> ~ MOVE_D : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_P : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_I : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_D : float </td></tr>
<tr><td align="left" balign="left"> ~ OFFSET : int </td></tr>
<tr><td align="left" balign="left"> - MAX_SPEED : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3MediumRegulatedMotor(motorPort : String) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.NXTRegulatedMotor
	c11 [label=<<table title="ev3dev.hardware.motor.NXTRegulatedMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NXTRegulatedMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ MOVE_P : float </td></tr>
<tr><td align="left" balign="left"> ~ MOVE_I : float </td></tr>
<tr><td align="left" balign="left"> ~ MOVE_D : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_P : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_I : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_D : float </td></tr>
<tr><td align="left" balign="left"> ~ OFFSET : int </td></tr>
<tr><td align="left" balign="left"> - MAX_SPEED : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + NXTRegulatedMotor(motorPort : String) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.RegulatedMotor
	c12 [label=<<table title="ev3dev.hardware.motor.RegulatedMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RegulatedMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + addListener(listener : RegulatedMotorListener) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + removeListener() : RegulatedMotorListener </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + stop(immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + flt(immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + waitComplete() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotate(angle : int, immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotate(angle : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotateTo(limitAngle : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotateTo(limitAngle : int, immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getLimitAngle() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setSpeed(speed : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getSpeed() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMaxSpeed() : float </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isStalled() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setStallThreshold(error : int, time : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setAcceleration(acceleration : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + close() </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.RegulatedMotorListener
	c13 [label=<<table title="ev3dev.hardware.motor.RegulatedMotorListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RegulatedMotorListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotationStarted(motor : RegulatedMotor, tachoCount : int, stalled : boolean, timeStamp : long) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotationStopped(motor : RegulatedMotor, tachoCount : int, stalled : boolean, timeStamp : long) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.Tachometer
	c14 [label=<<table title="ev3dev.hardware.motor.Tachometer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Tachometer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getTachoCount() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + resetTachoCount() </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.UnregulatedMotor
	c15 [label=<<table title="ev3dev.hardware.motor.UnregulatedMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UnregulatedMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UnregulatedMotor(type : String, portName : String) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.port.MotorPort
	c16 [label=<<table title="ev3dev.hardware.port.MotorPort" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> MotorPort </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + A : String </td></tr>
<tr><td align="left" balign="left"> + B : String </td></tr>
<tr><td align="left" balign="left"> + C : String </td></tr>
<tr><td align="left" balign="left"> + D : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.port.SensorPort
	c17 [label=<<table title="ev3dev.hardware.port.SensorPort" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SensorPort </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + S1 : String </td></tr>
<tr><td align="left" balign="left"> + S2 : String </td></tr>
<tr><td align="left" balign="left"> + S3 : String </td></tr>
<tr><td align="left" balign="left"> + S4 : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.BaseSensor
	c18 [label=<<table title="ev3dev.hardware.sensor.BaseSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BaseSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SYSTEM_CLASS_NAME : String </td></tr>
<tr><td align="left" balign="left"> # currentMode : int </td></tr>
<tr><td align="left" balign="left"> # modes : SensorMode[] </td></tr>
<tr><td align="left" balign="left"> ~ modeList : ArrayList&lt;String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BaseSensor(sensorPort : String) </td></tr>
<tr><td align="left" balign="left"> # setModes(m : SensorMode[]) </td></tr>
<tr><td align="left" balign="left"> + getAvailableModes() : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getMode(mode : int) : SensorMode </td></tr>
<tr><td align="left" balign="left"> + getMode(modeName : String) : SensorMode </td></tr>
<tr><td align="left" balign="left"> - isValid(mode : int) : boolean </td></tr>
<tr><td align="left" balign="left"> - getIndex(modeName : String) : int </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + setCurrentMode(mode : int) </td></tr>
<tr><td align="left" balign="left"> + setCurrentMode(modeName : String) </td></tr>
<tr><td align="left" balign="left"> + getCurrentMode() : int </td></tr>
<tr><td align="left" balign="left"> + getModeCount() : int </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.SampleProvider
	c19 [label=<<table title="ev3dev.hardware.sensor.SampleProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SampleProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + sampleSize() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + fetchSample(sample : float[], offset : int) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.SensorMode
	c20 [label=<<table title="ev3dev.hardware.sensor.SensorMode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SensorMode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getName() : String </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.SensorModes
	c21 [label=<<table title="ev3dev.hardware.sensor.SensorModes" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SensorModes </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getAvailableModes() : ArrayList&lt;String&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMode(mode : int) : SensorMode </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMode(modeName : String) : SensorMode </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setCurrentMode(mode : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setCurrentMode(modeName : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getCurrentMode() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getModeCount() : int </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3TouchSensor
	c22 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3TouchSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3TouchSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3TouchSensor(portName : String) </td></tr>
<tr><td align="left" balign="left"> # init() </td></tr>
<tr><td align="left" balign="left"> + getTouchMode() : SensorMode </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.EV3TouchSensor.TouchMode
	c23 [label=<<table title="ev3dev.hardware.sensor.ev3.EV3TouchSensor.TouchMode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TouchMode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - TouchMode() </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.GyroSensor
	c24 [label=<<table title="ev3dev.hardware.sensor.ev3.GyroSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GyroSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GyroSensor(sensorPort : String) </td></tr>
<tr><td align="left" balign="left"> + getAngle() : int </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.ev3.IRSensor
	c25 [label=<<table title="ev3dev.hardware.sensor.ev3.IRSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> IRSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + IRSensor(sensorPort : String) </td></tr>
<tr><td align="left" balign="left"> + getDistance() : int </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.utilities.Delay
	c26 [label=<<table title="ev3dev.utilities.Delay" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Delay </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Delay() </td></tr>
<tr><td align="left" balign="left"> + msDelay(period : long) </td></tr>
<tr><td align="left" balign="left"> + usDelay(period : long) </td></tr>
<tr><td align="left" balign="left"> + nsDelay(period : long) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//ev3dev.hardware.Device implements java.io.Closeable
	c27:p -> c0:p [dir=back,arrowtail=empty,style=dashed];
	//ev3dev.hardware.DeviceException extends java.lang.RuntimeException
	c28:p -> c1:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.EV3DevDevice extends ev3dev.hardware.Device
	c0:p -> c2:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.motor.BaseRegulatedMotor extends ev3dev.hardware.EV3DevDevice
	c2:p -> c6:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.motor.BaseRegulatedMotor implements ev3dev.hardware.motor.RegulatedMotor
	c12:p -> c6:p [dir=back,arrowtail=empty,style=dashed];
	//ev3dev.hardware.motor.BasicMotor extends ev3dev.hardware.EV3DevDevice
	c2:p -> c7:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.motor.BasicMotor implements ev3dev.hardware.motor.DCMotor
	c8:p -> c7:p [dir=back,arrowtail=empty,style=dashed];
	//ev3dev.hardware.motor.DCMotor implements ev3dev.hardware.motor.BaseMotor
	c5:p -> c8:p [dir=back,arrowtail=empty,style=dashed];
	//ev3dev.hardware.motor.EV3LargeRegulatedMotor extends ev3dev.hardware.motor.BaseRegulatedMotor
	c6:p -> c9:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.motor.EV3MediumRegulatedMotor extends ev3dev.hardware.motor.BaseRegulatedMotor
	c6:p -> c10:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.motor.NXTRegulatedMotor extends ev3dev.hardware.motor.BaseRegulatedMotor
	c6:p -> c11:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.motor.RegulatedMotor implements ev3dev.hardware.motor.BaseMotor
	c5:p -> c12:p [dir=back,arrowtail=empty,style=dashed];
	//ev3dev.hardware.motor.RegulatedMotor implements ev3dev.hardware.motor.Tachometer
	c14:p -> c12:p [dir=back,arrowtail=empty,style=dashed];
	//ev3dev.hardware.motor.RegulatedMotor implements java.io.Closeable
	c27:p -> c12:p [dir=back,arrowtail=empty,style=dashed];
	//ev3dev.hardware.motor.UnregulatedMotor extends ev3dev.hardware.motor.BasicMotor
	c7:p -> c15:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.BaseSensor extends ev3dev.hardware.EV3DevDevice
	c2:p -> c18:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.BaseSensor implements ev3dev.hardware.sensor.SensorModes
	c21:p -> c18:p [dir=back,arrowtail=empty,style=dashed];
	//ev3dev.hardware.sensor.SensorMode implements ev3dev.hardware.sensor.SampleProvider
	c19:p -> c20:p [dir=back,arrowtail=empty,style=dashed];
	//ev3dev.hardware.sensor.SensorModes implements ev3dev.hardware.sensor.SensorMode
	c20:p -> c21:p [dir=back,arrowtail=empty,style=dashed];
	//ev3dev.hardware.sensor.ev3.EV3TouchSensor extends ev3dev.hardware.sensor.BaseSensor
	c18:p -> c22:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.ev3.EV3TouchSensor.TouchMode implements ev3dev.hardware.sensor.SensorMode
	c20:p -> c23:p [dir=back,arrowtail=empty,style=dashed];
	//ev3dev.hardware.sensor.ev3.GyroSensor extends ev3dev.hardware.sensor.BaseSensor
	c18:p -> c24:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.ev3.IRSensor extends ev3dev.hardware.sensor.BaseSensor
	c18:p -> c25:p [dir=back,arrowtail=empty];
	// java.lang.RuntimeException
	c28 [label=<<table title="java.lang.RuntimeException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/RuntimeException.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RuntimeException </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RuntimeException() </td></tr>
<tr><td align="left" balign="left"> + RuntimeException(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + RuntimeException(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + RuntimeException(arg0 : Throwable) </td></tr>
<tr><td align="left" balign="left"> # RuntimeException(arg0 : String, arg1 : Throwable, arg2 : boolean, arg3 : boolean) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/RuntimeException.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.io.Closeable
	c27 [label=<<table title="java.io.Closeable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/io/Closeable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Closeable </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + close() </font></td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/io/Closeable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

